# config pour un site apache
# 
# Exemple sur une debian avec site: { id: sitexemple, apache_includes: [ file1.inc, file2.inc ] }
# 
# Le fichier de conf sera copié (si .j2 c'est un template):
#   dans /etc/apache2/sites-enables/sitexmple.conf
#   depuis (first match wins) {{ siteconf_locations }} dans vars/site.yml:
 
# les 'includes' seront copiés: (ex. pour 'file1.inc'):
#   dans /etc/apache2/file1.inc
#   depuis (first match wins) {{ include_locations }} dans vars/site.yml:
---
- include_vars: site.yml

- name: site includes
  template:
    dest: '{{ apache_etcdir }}/{{ item | regex_replace(".j2$","") }}'
    src: '{{ lookup("first_found", include_locations) }}'
  with_items: '{{ site.apache_includes }}'
  when: '"apache_includes" in site'

- name: conf includes
  copy:
    src: '{{ item }}'
    dest: '{{ apache_etcdir }}/{{ apache_includesdir }}/{{ item | regex_replace(".*/([^/]+)$","\1") }}'
    mode: '0644'
  with_fileglob:
    - 'apache/{{ site.id }}/{{ apache_includesdir }}/*.conf'

# app root dir
- block:
  - name: root dir
    copy:
      dest: '{{ site.rootdir }}/'
      src: '{{ site.rootsrc }}/'
      mode: a=rX,u+w
      owner: root
      group: '{{ site.group }}'
    when: '"rootsrc" in onesite'
  - name: root git
    git:
      clone: yes
      depth: 2
      repo: '{{ site.gitroot }}'
      dest: '{{ site.rootdir }}'
    when: '"gitroot" in onesite'
  - name: mkdir root dir
    file:
      dest: '{{ site.rootdir }}'
      state: directory
      mode: '0751'
      owner: root
      group: '{{ site.group }}'
    when: '"rootdir" in onesite'
  - name: grwfiles
    file:
      dest: '{{ item }}'
      state: file
      mode: g+w
      group: '{{ site.group }}'
    with_items: '{{ site.grwfiles }}'
    when: '"grwfiles" in onesite'
  - name: grwdirs
    file:
      dest: '{{ item }}'
      state: directory
      mode: g+w
      recurse: yes
      group: '{{ site.group }}'
    with_items: '{{ site.grwdirs }}'
    when: '"grwdirs" in onesite'

- name: TLS cert
  copy:
    src: 'tls/{{ site.tls_cert }}'
    dest: '{{ tls_dir }}/{{ site.tls_cert }}'
    mode: '0644'
  when: '"tls_cert" in site'

- block:
  - name: TLS private dir
    file:
      dest: '{{ tls_dir }}/private'
      state: directory
      mode: 0750
      owner: root
  - name: TLS key
    copy:
      src: 'tls/{{ site.tls_key }}'
      dest: '{{ tls_dir }}/private/{{ site.tls_key }}'
      mode: '0644'
  when: '"tls_key" in site'

- debug: var=site

- name: site apache config
  template:
    dest: '{{ apache_etcdir }}/{{ apache_sitesdir }}/{{ site.id }}.conf'
    src: '{{ lookup("first_found", siteconf_locations) }}'
  notify: restart apache

- name: Listen in Zsites.conf
  lineinfile:
    dest: '{{ apache_etcdir }}/{{ apache_includesdir }}/Zsites.conf'
    line: 'Listen {{ site.listen }}'
    regexp: 'Listen {{ site.listen | regex_escape() }}'
    insertafter: 'Listen'
  when: '( ansible_os_family == "FreeBSD" and not site.listen | regex_search("80$") ) or ( ansible_os_family == "Debian" and not site.listen | regex_search("(80|443)$") )'
