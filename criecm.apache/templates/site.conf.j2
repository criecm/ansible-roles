# {{ ansible_managed }}
<VirtualHost {% if site.listen | search(':') %}{{ site.listen }}{% else %}*:{{ site.listen }}{% endif %}>
  ServerName {{ site.name }}
{% if "aliases" in site and site.aliases | count() > 0 %}
{% for alias in site.aliases %}
  ServerAlias {{alias}}
{% endfor %}
{% endif %}

{% if site.default_index %}
  DirectoryIndex {{ site.default_index }}
{% endif %}

{% if site.rootdir %}
  DocumentRoot {{ site.rootdir }}

  <Directory {{ site.rootdir }}>
    Require all granted
  </Directory>
{% endif %}

{% if site.tls %}
  SSLEngine on
{% if "tls_cert" in site %}
  SSLCertificateFile {{ tls_dir }}/{{ site.tls_cert }}
{% if "tls_key" in site %}
  SSLCertificateKeyFile {{ tls_dir }}/private/{{ site.tls_key }}
{% endif %}
{% endif %}
{% if "hsts" in site %}
  Header unset Strict-Transport-Security
  Header set Strict-Transport-Security "max-age={{ site.hsts }}"
{% endif %}
{% endif %}

{% if "backends" in site %}
  ProxyPreserveHost On
{% if site.backends | count() > 1 %}
  Header add Set-Cookie "{{ site.id }}B=.%{BALANCER_WORKER_ROUTE}e; path=/" env=BALANCER_ROUTE_CHANGED
  <Proxy balancer://{{ site.id }}>
	{% for backend in site.backends %}
	BalancerMember {{ backend }}
	{% endfor %}
	Require all granted
	ProxySet stickysession={{ site.id }}B timeout=3
  </Proxy>
  ProxyPass / balancer://{{ site.id }}/
  ProxyPassReverse / balancer://{{ site.id }}/

{% if admin_from %}
<Location /balancer-manager>
	SetHandler balancer-manager
{% for net in admin_from %}
	Require ip {{ net }}
{% endfor %}
</Location>
ProxyPass /balancer-manager !
{% endif %}

{% elif site.backends | count() == 1 %}
  <Proxy {{ site.backends[0] }}>
    Require all granted
  </Proxy>
  ProxyPass / {{ site.backends[0] }}/
  ProxyPassReverse / {{ site.backends[0] }}/
{% endif %}
{% endif %}

{% for include in site.apache_includes %}
  Include {{ apache_etcdir }}/{{ include | regex_replace(".j2$","") }}
{% endfor %}

</VirtualHost>

{% if site.tls and site.tls_redir %}
<VirtualHost {% if site.listen | search(':') %}{{ site.listen | regex_replace(':.*',':80') }}{% else %}*:80{% endif %}>
  Redirect permanent "/" "https://{{ site.name }}{% if not site.listen | regex_search(':?443$') %}:{{ site.listen | regex_replace('.*:','') }}{% endif %}/"
</VirtualHost>
{% endif %}
