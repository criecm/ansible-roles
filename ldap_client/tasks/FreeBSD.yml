---
# config client ldap FreeBSD

- block:
  - name: installe client ldap FreeBSD
    pkgng:
      name: nss-pam-ldapd
      state: present
  - name: active client LDAP FreeBSD
    lineinfile:
      dest: '/etc/rc.conf'
      regexp: '{{item.regexp}}'
      line: '{{item.line}}'
      state: present
    with_items:
      - { regexp: '^nscd_enable', line: 'nscd_enable="NO"' }
      - { regexp: '^nslcd_enable', line: 'nslcd_enable="YES"' }
      - { regexp: '^nslcd_supervisor', line: 'nslcd_supervisor="YES"' }
  tags: nssldap

- name: Config nsswitch.conf FreeBSD
  lineinfile:
    dest: '/etc/nsswitch.conf'
    regexp: '{{item.regexp}}'
    line: '{{item.line}}'
    state: present
  with_items:
    - { regexp: '^group_compat:', line: 'group_compat: ldap' }
    - { regexp: '^passwd_compat:', line: 'passwd_compat: ldap' }
    - { regexp: '^group:', line: 'group: compat' }
    - { regexp: '^passwd:', line: 'passwd: compat' }
  tags: nssldap

- block:
  - name: Enable LDAP /etc/passwd
    lineinfile:
      dest: /etc/passwd
      regexp: '^\+:'
      line: '+:*:::::{{ldap_force_shell}}'
      state: present
  - name: Enable LDAP /etc/group
    lineinfile:
      dest: /etc/group
      regexp: '^\+:'
      line: '+:*:0:'
      state: present
  - name: Enable LDAP /etc/master.passwd
    lineinfile:
      dest: /etc/master.passwd
      regexp: '^\+:'
      line: '+:*:::{{ldap_force_homedir_by_class}}:0:0:::{{ldap_force_shell}}'
      state: present
    notify: rebuild FreeBSD pwdb
  tags: nssldap

# verifie l'existence de {{ldap_force_homedir_by_class}}
- name: check ldap_force_homedir_by_class
  lineinfile:
    dest: /etc/login.conf
    regexp: '^{{ldap_force_homedir_by_class}}:'
    state: absent
  check_mode: yes
  failed_when: false
  changed_when: false
  register: ldapUserClassInLoginConf

# verifie qu'on l'a bien mis nous-memes
- name: check ldap_force_homedir_by_class by ansible
  lineinfile:
    dest: /etc/login.conf
    regexp: '^# BEGIN ANSIBLE MANAGED ldap_force_homedir_by_class #$'
    state: absent
  check_mode: yes
  failed_when: false
  changed_when: false
  register: ldapUserClassByAnsible

# place ou modifie le block SI il manque ou qu'on l'a mis ici-meme
- name: login.conf
  blockinfile:
    dest: /etc/login.conf
    marker: '# {mark} ANSIBLE MANAGED ldap_force_homedir_by_class #'
    block: |
      {{ldap_force_homedir_by_class}}:\
      	:requirehome:\
      	:tc=default:
    validate: cap_mkdb %s
  notify: rebuild login.conf database
  when: ("{{ldap_force_homedir_by_class}}" != "") and ((ldapUserClassInLoginConf.found == 0) or (ldapUserClassByAnsible.found == 1))

# config PAM: ssh ou tout
- name: pam config
  lineinfile:
    dest: '/etc/pam.d/{{ service }}'
    line: 'auth	sufficient	/usr/local/lib/pam_ldap.so	try_first_pass'
    insertbefore: '^auth\s+required.*pam_unix'
    regexp: '^auth\s.*pam_ldap.so'
  with_items: '{{ pam_ldap_services | default([]) }}'
  loop_control:
    loop_var: service
