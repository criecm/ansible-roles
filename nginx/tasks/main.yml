---
- include_vars: '{{ item }}'
  with_first_found:
    - '{{ ansible_os_family }}.yml'

- include: '{{ item }}'
  with_first_found:
    - '{{ ansible_os_family }}.yml'

- name: installe nginx
  pkgng:
    name: nginx
    state: present
  tags: nginx, pkg

- name: enable nginx
  service:
    name: nginx
    enabled: yes
    state: started
  tags: nginx, rc

- block:
  - name: default config
    template:
      src: nginx.conf.j2
      dest: '{{ etcprefix }}/etc/nginx/nginx.conf'
    notify: restart nginx
  - name: servers.d dir
    file:
      dest: '{{ etcprefix }}/etc/nginx/{{ item }}'
      state: directory
      mode: '0750'
      owner: root
    with_items:
      - servers.d
      - modules.d
      - conf.d
    notify: restart nginx
  - name: default config parts
    template:
      src: 'nginx/{{ item }}.j2'
      dest: '{{ etcprefix }}/etc/nginx/{{ item }}'
    with_items:
      - servers.d/0default.conf
    notify: restart nginx
  tags: nginx, config

# logs dir
- name: log dir
  file:
    dest: '{{ nginx_log_dir }}'
    owner: '{{ nginx_user }}'
    mode: '0750'
    state: directory
  when: 'nginx_log_dir != ""'
  tags: nginx, config

- name: freebsd newsyslog
  template:
    src: newsyslog_nginx.conf.j2
    dest: '{{ etcprefix }}/etc/newsyslog.conf.d/nginx.conf'
  when: '{{ ansible_distribution }} == "FreeBSD" }}'

# reverse-proxy if any
- block:
  - name: config reverse-proxy
    lineinfile:
      line: '{{ item.line }}'
      regexp: '{{ item.regexp }}'
      state: present
    with_items:
      - { line: 'fastcgi_param  HTTPS $myhttps if_not_empty;', regexp: '^fastcgi_param\s+HTTPS' }
      - { line: 'fastcgi_param  REQUEST_SCHEME $myscheme if_not_empty;', regexp: '^fastcgi_param\s+REQUEST_SCHEME' }
    notify: restart nginx
  - name:
    template:
      src: nginx/modules.d/realip.conf.j2
      dest: '{{ etcprefix }}/etc/nginx/modules.d/realip.conf'
    notify: restart nginx
  when: '{{ proxified_by | count() }} > 0'

# x509 if needed
- block:
  - name: copie cachain
    copy:
      src: '{{ x509_cachain }}'
      dest: /etc/ssl/stapling.crt;
      mode: '0644'
    when: 'x509_cachain != ""'
  - name: x509 global config
    template:
      src: tls.inc.j2
      dest: '{{ nginx_etcdir }}/conf.d/tls.inc'
      mode: '0644'
  - name: check dhparam
    stat:
      path: /etc/ssh/dhparam4096.pem
      register: stat_dh
  - name: create dhparam
    command: 'openssl dhparam -out /etc/ssh/dhparam4096.pem 4096'
    when: not stat_dh.stat.exists
  when: 'do_tls == True'

- name: sites
  include: site.yml
  with_items: '{{ nginx_sites }}'
