---
# taches communes ECM

- include_vars: 'vars/{{ansible_os_family}}.yml'

- include: 'tasks/{{ansible_os_family}}.yml'

- name: Installe CA ECM
  copy:
    src: files/caecm.crt
    dest: /etc/ssl/caecm.crt
    owner: root
    group: 0
    mode: 0644
  tags: sslecm

- block:
  - name: Config ldap.conf
    lineinfile:
      dest: '{{ldap_etcdir}}/ldap.conf'
      regexp: '{{ item.regexp }}'
      line: '{{ item.line }}'
      state: present
    with_items:
      - { regexp: '^TLS_CACERT', line: 'TLS_CACERT /etc/ssl/caecm.crt' }
      - { regexp: '^TLS_REQCERT', line: 'TLS_REQCERT demand' }
      - { regexp: '^BASE', line: 'BASE {{ldap_base}}' }
      - { regexp: '^URI', line: 'URI {{ldap_uri}}' }
  - name: chmod 644 ldap.conf
    file:
      path: '{{ldap_etcdir}}/ldap.conf'
      mode: 0644
  tags: ldapconf

- block:
  - name: config ssh
    file:
      path: /root/.ssh
      state: directory
      mode: 0700
      owner: root
      group: 0
  - name: sshd_config
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: "{{item.regexp}}"
      line: "{{item.line}}"
      insertafter: "{{item.lineafter}}"
      state: present
      validate: '/usr/sbin/sshd -tf %s'
    notify: restart sshd
    with_items:
      - { line: 'PermitUserEnvironment yes', regexp: '^PermitUserEnvironment', lineafter: '^#[[:space:]]*PermitUserEnvironment' }
      - { line: 'PermitRootLogin without-password', regexp: '^PermitRootLogin', lineafter: '^#[[:space:]]*PermitRootLogin' }
  - name: root authorized_keys
    authorized_key:
      key: "{{ lookup('file',item) }}"
      user: root
      key_options: "environment=\"DSI={{item | regex_replace('^.*/(\\w+)\\.pub','\\1')}}\""
    with_fileglob:
      - cles_ssh/*.pub
  tags: sshconf

- block:
  - name: zsh in /etc/shells
    lineinfile:
      dest: /etc/shells
      line: "{{zshpath}}"
  - name: shell root
    user:
      name: root
      shell: "{{zshpath}}"
  - name: zshrc
    lineinfile:
      dest: /root/.zshrc
      line: "{{item.line}}"
      create: True
      mode: 600
      owner: root
      state: present
    with_items:
      - { line: 'autoload -Uz compinit', regexp: '^autoload.*compinit' }
      - { line: 'compinit', regexp: '^compinit' }
      - { line: 'HISTFILE=~/.zsh_history', regexp: '^HISTFILE=' }
      - { line: 'SAVEHIST=100000', regexp: '^SAVEHIST=' }
      - { line: 'setopt APPEND_HISTORY', regexp: '^setopt[[:space:]]+APPEND_HISTORY' }
      - { line: '[ -r /usr/local/admin/sysutils/common/rootlogin.env.sh ] && . /usr/local/admin/sysutils/common/rootlogin.env.sh', regexp: '^[^#].*/admin/.*/rootlogin\.env\.sh' }
      - { line: '[ -f ~/.aliases ] && . ~/.aliases', regexp: '^[^#].*/\.aliases' }
      - { line: '[ -r /usr/local/admin/sysutils/common/shell_aliases ] && . /usr/local/admin/sysutils/common/shell_aliases', regexp: '^[^#].*/shell_aliases' }
  tags: zshroot

- block:
  - name: git sysutils/common
    file:
      path: /usr/local/admin/sysutils
      state: directory
      mode: 750
      owner: root
      group: 0
  - name: cle ssh cvs
    copy:
      dest: /root/.ssh/id_cvs_rsa
      src: files/id_cvs_rsa
      owner: root
      group: 0
      mode: 0600
  - name: git 'common'
    git:
      dest: /usr/local/admin/sysutils/common
      repo: ssh://git@git.centrale-marseille.fr/sysutils/common.git
      accept_hostkey: yes
      key_file: /root/.ssh/id_cvs_rsa
      depth: 2
  tags: gitecm

- block:
  - name: old cron daily
    cron:
      job: '/usr/local/admin/utils/systeme/cron_daily_serveur.sh'
      state: absent
  - name: old cron weekly
    cron:
      job: '/usr/local/admin/utils/systeme/cron_weekly_serveur.sh'
      state: absent
  - name: old crons daily/weekly /etc/crontab
    lineinfile:
      dest: /etc/crontab
      regexp: '/usr/local/admin/utils/systeme/cron_(daily|weekly)_serveur\.sh'
      state: absent
  - name: cron daily
    cron:
      name: cron daily ECM
      hour: 23
      minute: 32
      job: '/usr/local/admin/sysutils/common/cron/daily.sh'
  - name: cron weekly
    cron:
      name: weekly ECM
      hour: 23
      minute: 51
      job: '/usr/local/admin/sysutils/common/cron/weekly.sh'
  tags: cronecm

- name: alias mail root
  lineinfile:
    dest: "{{mailaliases}}"
    line: "root: {{rootmailto}}"
    regexp: '^root:'
  notify: newaliases
  when: "'{{rootmailto}}' != ''"
  tags: mailclient
