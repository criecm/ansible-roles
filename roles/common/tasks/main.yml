---
# taches communes ECM

- include_vars: '{{ includefile }}'
  with_first_found:
    - files:
        - '{{ ansible_os_family }}.yml'
      skip: True
  loop_control:
    loop_var: includefile
  tags: vars

- debug: var=nsd_configdir
  tags: nsd

- include: '{{ includefile }}'
  with_first_found:
    - files:
        - '{{ ansible_os_family }}.yml'
      skip: True
  loop_control:
    loop_var: includefile

- name: resolv.conf
  template:
    src: resolv.conf.j2
    dest: /etc/resolv.conf
    owner: root
    mode: '0644'
  tags: resolver

- name: Installe CA local
  copy:
    src: '{{x509_ca_file}}'
    dest: /etc/ssl/caecm.crt
    owner: root
    group: 0
    mode: '0644'
  tags: sslecm
  when: '"{{x509_ca_file}}" != ""'

- block:
  - name: Config ldap.conf
    lineinfile:
      dest: '{{ldap_etcdir}}/ldap.conf'
      regexp: '{{ item.regexp }}'
      line: '{{ item.line }}'
      state: present
    with_items:
      - { regexp: '^BASE', line: 'BASE {{ldap_base}}' }
      - { regexp: '^URI', line: 'URI {{ldap_uri}}' }
      - { regexp: '^TLS_REQCERT', line: 'TLS_REQCERT {{ldap_tls_reqcert}}' }
      - { regexp: '^TLS_CACERT', line: 'TLS_CACERT /etc/ssl/caecm.crt' }
  - name: chmod 644 ldap.conf
    file:
      path: '{{ldap_etcdir}}/ldap.conf'
      mode: '0644'
  tags: ldapconf

- block:
  - name: config ssh root
    file:
      path: /root/.ssh
      state: directory
      mode: '0700'
      owner: root
      group: 0
  - name: sshd_config
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: "{{item.regexp}}"
      line: "{{item.line}}"
      insertafter: "{{item.lineafter}}"
      state: present
      validate: '/usr/sbin/sshd -tf %s'
    notify: restart sshd
    with_items:
      - { line: 'PermitUserEnvironment yes', regexp: '^PermitUserEnvironment', lineafter: '^#[[:space:]]*PermitUserEnvironment' }
      - { line: 'PermitRootLogin without-password', regexp: '^PermitRootLogin', lineafter: '^#[[:space:]]*PermitRootLogin' }
  - name: root authorized_keys
    authorized_key:
      key: "{{ lookup('file',item) }}"
      user: root
      key_options: "environment=\"DSI={{item | regex_replace('^.*/(\\w+)\\.pub','\\1')}}\""
    with_fileglob:
      - cles_ssh/*.pub
  - name: root unauthorized keys
    authorized_key:
      key: "{{ lookup('file',item) }}"
      user: root
      state: absent
    with_fileglob:
      - cles_ssh/*.del
  tags: sshconf

- block:
  - name: zsh in /etc/shells
    lineinfile:
      dest: /etc/shells
      line: "{{zshpath}}"
  - name: shell root
    user:
      name: root
      shell: "{{zshpath}}"
  - name: zshrc
    template:
      dest: /root/.zshrc
      src: zshrc.j2
      mode: '0600'
      owner: root
  tags: zshroot

- block:
  - name: git sysutils/common
    file:
      path: /usr/local/admin/sysutils
      state: directory
      mode: '0750'
      owner: root
      group: 0
  - name: cle ssh cvs
    copy:
      dest: /root/.ssh/id_cvs_rsa
      src: files/id_cvs_rsa
      owner: root
      group: 0
      mode: '0600'
  - name: repos git sysadm_gits
    git:
      dest: '/usr/local/admin/sysutils/{{ item.name }}'
      repo: '{{ item.giturl }}'
      accept_hostkey: yes
      key_file: /root/.ssh/id_cvs_rsa
      depth: 2
    with_items: '{{ sysadm_gits }}'
  tags: gitecm

- block:
  - name: old cron daily
    cron:
      job: '/usr/local/admin/utils/systeme/cron_daily_serveur.sh'
      state: absent
  - name: old cron weekly
    cron:
      job: '/usr/local/admin/utils/systeme/cron_weekly_serveur.sh'
      state: absent
  - name: old crons daily/weekly /etc/crontab
    lineinfile:
      dest: /etc/crontab
      regexp: '{{ item }}'
      state: absent
    with_items:
      - '/usr/local/admin/utils/systeme/cron_(daily|weekly)_serveur\.sh'
      - '/usr/local/admin/sysutils/common/cron/(daily|weekly)\.sh'
      - '^# mises a jour auto du CVS du CRI'
  - name: cron daily
    cron:
      name: cron daily ECM
      hour: 23
      minute: 53
      job: '/usr/local/admin/sysutils/common/cron/daily.sh'
  - name: cron weekly
    cron:
      name: weekly ECM
      hour: 23
      minute: 32
      job: '/usr/local/admin/sysutils/common/cron/weekly.sh'
  tags: cronecm

- name: alias mail root
  lineinfile:
    dest: "{{mailaliases}}"
    line: "root: {{rootmailto}}"
    regexp: '^root:'
  notify: newaliases
  when: "'{{rootmailto}}' != ''"
  tags: mailclient
